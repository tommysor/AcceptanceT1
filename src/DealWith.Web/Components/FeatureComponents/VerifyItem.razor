@using DealWith.Web.Components.FeatureComponents.VerifyItemFeature
@inject IVerifyItemService VerifyItemService
@rendermode InteractiveServer

<h3>Verify</h3>
<EditForm EditContext="_editContext" OnSubmit="OnSubmit" FormName="VerifyItemForm">
    <label>Verify item <InputText @bind-Value="_verifyItemInfo!.ItemId" /></label>
    <input type="submit" value="Verify">
</EditForm>

@if (_verifyItemResult != null)
{
    <div id="verify-item-result">
        <h3>Result</h3>
        <p>Item ID: <span id="verify-item-result-itemid">@_verifyItemResult.ItemId</span></p>
        <p>Is verified: <span id="verify-item-result-isvalid">@_verifyItemResult.IsValid</span></p>
        <p>Message: <span id="verify-item-result-message">@_verifyItemResult.Message</span></p>
    </div>
}

@code{
    private EditContext? _editContext;
    private VerifyItemInfo? _verifyItemInfo;
    private VerifyItemResult? _verifyItemResult;

    override protected Task OnInitializedAsync()
    {
        ResetInput();
        return Task.CompletedTask;
    }

    private void ResetInput()
    {
        _verifyItemInfo = new VerifyItemInfo();
        _editContext = new EditContext(_verifyItemInfo);
    }

    private async Task OnSubmit()
    {
        _verifyItemResult = null;
        _verifyItemResult = await VerifyItemService.VerifyItemAsync(_verifyItemInfo!);
        ResetInput();
    }
}
